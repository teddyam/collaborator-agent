import { SubmitActionOptions, ISubmitAction, SubmitAction } from '../../core.js';
import { MSTeamsData } from './ms-teams-data.js';

type SignInActionOptions = SubmitActionOptions & {
    data: MSTeamsData<ISignInData>;
};
interface ISignInAction extends ISubmitAction {
    /**
     * Initial data that input fields will be combined with. These are essentially ‘hidden’ properties.
     */
    data: MSTeamsData<ISignInData>;
}
declare class SignInAction extends SubmitAction implements ISignInAction {
    /**
     * Initial data that input fields will be combined with. These are essentially ‘hidden’ properties.
     */
    data: MSTeamsData<ISignInData>;
    constructor(value: string, options?: SubmitActionOptions);
    static from(options: SignInActionOptions): SignInAction;
    withData(value: ISignInData): this;
    withValue(value: string): this;
}
interface ISignInData {
    type: 'signin';
    /**
     * Set to the `URL` where you want to redirect.
     */
    value: string;
}
declare class SignInData implements ISignInData {
    type: 'signin';
    /**
     * Set to the `URL` where you want to redirect.
     */
    value: string;
    constructor(value: string);
}

export { type ISignInAction, type ISignInData, SignInAction, type SignInActionOptions, SignInData };
