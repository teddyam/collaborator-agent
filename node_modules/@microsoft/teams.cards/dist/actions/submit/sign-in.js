'use strict';

var core = require('../../core');

class SignInAction extends core.SubmitAction {
  /**
   * Initial data that input fields will be combined with. These are essentially ‘hidden’ properties.
   */
  data;
  constructor(value, options = {}) {
    super(options);
    Object.assign(this, options);
    this.data = { msteams: new SignInData(value) };
  }
  static from(options) {
    return new SignInAction(options.data.msteams.value, options);
  }
  withData(value) {
    super.withData({ msteams: value });
    return this;
  }
  withValue(value) {
    this.data.msteams.value = value;
    return this;
  }
}
class SignInData {
  type;
  /**
   * Set to the `URL` where you want to redirect.
   */
  value;
  constructor(value) {
    this.type = "signin";
    this.value = value;
  }
}

exports.SignInAction = SignInAction;
exports.SignInData = SignInData;
//# sourceMappingURL=sign-in.js.map
//# sourceMappingURL=sign-in.js.map