{"version":3,"sources":["../../../src/actions/submit/sign-in.ts"],"names":[],"mappings":";;AAaO,MAAM,qBAAqB,YAAsC,CAAA;AAAA;AAAA;AAAA;AAAA,EAItE,IAAA;AAAA,EAEA,WAAY,CAAA,KAAA,EAAe,OAA+B,GAAA,EAAI,EAAA;AAC5D,IAAA,KAAA,CAAM,OAAO,CAAA;AACb,IAAO,MAAA,CAAA,MAAA,CAAO,MAAM,OAAO,CAAA;AAC3B,IAAA,IAAA,CAAK,OAAO,EAAE,OAAA,EAAS,IAAI,UAAA,CAAW,KAAK,CAAE,EAAA;AAAA;AAC/C,EAEA,OAAO,KAAK,OAA8B,EAAA;AACxC,IAAA,OAAO,IAAI,YAAa,CAAA,OAAA,CAAQ,IAAK,CAAA,OAAA,CAAQ,OAAO,OAAO,CAAA;AAAA;AAC7D,EAEA,SAAS,KAAoB,EAAA;AAC3B,IAAA,KAAA,CAAM,QAAS,CAAA,EAAE,OAAS,EAAA,KAAA,EAAO,CAAA;AACjC,IAAO,OAAA,IAAA;AAAA;AACT,EAEA,UAAU,KAAe,EAAA;AACvB,IAAK,IAAA,CAAA,IAAA,CAAK,QAAQ,KAAQ,GAAA,KAAA;AAC1B,IAAO,OAAA,IAAA;AAAA;AAEX;AAWO,MAAM,UAAkC,CAAA;AAAA,EAC7C,IAAA;AAAA;AAAA;AAAA;AAAA,EAKA,KAAA;AAAA,EAEA,YAAY,KAAe,EAAA;AACzB,IAAA,IAAA,CAAK,IAAO,GAAA,QAAA;AACZ,IAAA,IAAA,CAAK,KAAQ,GAAA,KAAA;AAAA;AAEjB","file":"sign-in.mjs","sourcesContent":["import { ISubmitAction, SubmitAction, SubmitActionOptions } from '../../core';\n\nimport { MSTeamsData } from './ms-teams-data';\n\nexport type SignInActionOptions = SubmitActionOptions & { data: MSTeamsData<ISignInData> };\n\nexport interface ISignInAction extends ISubmitAction {\n  /**\n   * Initial data that input fields will be combined with. These are essentially ‘hidden’ properties.\n   */\n  data: MSTeamsData<ISignInData>;\n}\n\nexport class SignInAction extends SubmitAction implements ISignInAction {\n  /**\n   * Initial data that input fields will be combined with. These are essentially ‘hidden’ properties.\n   */\n  data: MSTeamsData<ISignInData>;\n\n  constructor(value: string, options: SubmitActionOptions = {}) {\n    super(options);\n    Object.assign(this, options);\n    this.data = { msteams: new SignInData(value) };\n  }\n\n  static from(options: SignInActionOptions) {\n    return new SignInAction(options.data.msteams.value, options);\n  }\n\n  withData(value: ISignInData) {\n    super.withData({ msteams: value });\n    return this;\n  }\n\n  withValue(value: string) {\n    this.data.msteams.value = value;\n    return this;\n  }\n}\n\nexport interface ISignInData {\n  type: 'signin';\n\n  /**\n   * Set to the `URL` where you want to redirect.\n   */\n  value: string;\n}\n\nexport class SignInData implements ISignInData {\n  type: 'signin';\n\n  /**\n   * Set to the `URL` where you want to redirect.\n   */\n  value: string;\n\n  constructor(value: string) {\n    this.type = 'signin';\n    this.value = value;\n  }\n}\n"]}