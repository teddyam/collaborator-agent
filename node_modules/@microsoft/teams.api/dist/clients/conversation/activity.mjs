import { Client } from '@microsoft/teams.common/http';

class ConversationActivityClient {
  serviceUrl;
  get http() {
    return this._http;
  }
  set http(v) {
    this._http = v;
  }
  _http;
  constructor(serviceUrl, options) {
    this.serviceUrl = serviceUrl;
    if (!options) {
      this._http = new Client();
    } else if ("request" in options) {
      this._http = options;
    } else {
      this._http = new Client(options);
    }
  }
  async create(conversationId, params) {
    const res = await this.http.post(
      `${this.serviceUrl}/v3/conversations/${conversationId}/activities`,
      params
    );
    return res.data;
  }
  async update(conversationId, id, params) {
    const res = await this.http.put(
      `${this.serviceUrl}/v3/conversations/${conversationId}/activities/${id}`,
      params
    );
    return res.data;
  }
  async reply(conversationId, id, params) {
    params.replyToId = id;
    const res = await this.http.post(
      `${this.serviceUrl}/v3/conversations/${conversationId}/activities/${id}`,
      params
    );
    return res.data;
  }
  async delete(conversationId, id) {
    const res = await this.http.delete(
      `${this.serviceUrl}/v3/conversations/${conversationId}/activities/${id}`
    );
    return res.data;
  }
  async getMembers(conversationId, id) {
    const res = await this.http.get(
      `${this.serviceUrl}/v3/conversations/${conversationId}/activities/${id}/members`
    );
    return res.data;
  }
}

export { ConversationActivityClient };
//# sourceMappingURL=activity.mjs.map
//# sourceMappingURL=activity.mjs.map