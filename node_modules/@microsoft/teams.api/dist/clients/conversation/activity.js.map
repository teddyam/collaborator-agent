{"version":3,"sources":["../../../src/clients/conversation/activity.ts"],"names":["Client"],"mappings":";;;;AAOO,MAAM,0BAA2B,CAAA;AAAA,EAC7B,UAAA;AAAA,EAET,IAAI,IAAO,GAAA;AACT,IAAA,OAAO,IAAK,CAAA,KAAA;AAAA;AACd,EACA,IAAI,KAAK,CAAG,EAAA;AACV,IAAA,IAAA,CAAK,KAAQ,GAAA,CAAA;AAAA;AACf,EACU,KAAA;AAAA,EAEV,WAAA,CAAY,YAAoB,OAAkC,EAAA;AAChE,IAAA,IAAA,CAAK,UAAa,GAAA,UAAA;AAElB,IAAA,IAAI,CAAC,OAAS,EAAA;AACZ,MAAK,IAAA,CAAA,KAAA,GAAQ,IAAIA,WAAO,EAAA;AAAA,KAC1B,MAAA,IAAW,aAAa,OAAS,EAAA;AAC/B,MAAA,IAAA,CAAK,KAAQ,GAAA,OAAA;AAAA,KACR,MAAA;AACL,MAAK,IAAA,CAAA,KAAA,GAAQ,IAAIA,WAAA,CAAO,OAAO,CAAA;AAAA;AACjC;AACF,EAEA,MAAM,MAAO,CAAA,cAAA,EAAwB,MAAwB,EAAA;AAC3D,IAAM,MAAA,GAAA,GAAM,MAAM,IAAA,CAAK,IAAK,CAAA,IAAA;AAAA,MAC1B,CAAG,EAAA,IAAA,CAAK,UAAU,CAAA,kBAAA,EAAqB,cAAc,CAAA,WAAA,CAAA;AAAA,MACrD;AAAA,KACF;AACA,IAAA,OAAO,GAAI,CAAA,IAAA;AAAA;AACb,EAEA,MAAM,MAAA,CAAO,cAAwB,EAAA,EAAA,EAAY,MAAwB,EAAA;AACvE,IAAM,MAAA,GAAA,GAAM,MAAM,IAAA,CAAK,IAAK,CAAA,GAAA;AAAA,MAC1B,GAAG,IAAK,CAAA,UAAU,CAAqB,kBAAA,EAAA,cAAc,eAAe,EAAE,CAAA,CAAA;AAAA,MACtE;AAAA,KACF;AACA,IAAA,OAAO,GAAI,CAAA,IAAA;AAAA;AACb,EAEA,MAAM,KAAA,CAAM,cAAwB,EAAA,EAAA,EAAY,MAAwB,EAAA;AACtE,IAAA,MAAA,CAAO,SAAY,GAAA,EAAA;AACnB,IAAM,MAAA,GAAA,GAAM,MAAM,IAAA,CAAK,IAAK,CAAA,IAAA;AAAA,MAC1B,GAAG,IAAK,CAAA,UAAU,CAAqB,kBAAA,EAAA,cAAc,eAAe,EAAE,CAAA,CAAA;AAAA,MACtE;AAAA,KACF;AACA,IAAA,OAAO,GAAI,CAAA,IAAA;AAAA;AACb,EAEA,MAAM,MAAO,CAAA,cAAA,EAAwB,EAAY,EAAA;AAC/C,IAAM,MAAA,GAAA,GAAM,MAAM,IAAA,CAAK,IAAK,CAAA,MAAA;AAAA,MAC1B,GAAG,IAAK,CAAA,UAAU,CAAqB,kBAAA,EAAA,cAAc,eAAe,EAAE,CAAA;AAAA,KACxE;AACA,IAAA,OAAO,GAAI,CAAA,IAAA;AAAA;AACb,EAEA,MAAM,UAAW,CAAA,cAAA,EAAwB,EAAY,EAAA;AACnD,IAAM,MAAA,GAAA,GAAM,MAAM,IAAA,CAAK,IAAK,CAAA,GAAA;AAAA,MAC1B,GAAG,IAAK,CAAA,UAAU,CAAqB,kBAAA,EAAA,cAAc,eAAe,EAAE,CAAA,QAAA;AAAA,KACxE;AACA,IAAA,OAAO,GAAI,CAAA,IAAA;AAAA;AAEf","file":"activity.js","sourcesContent":["import { Client, ClientOptions } from '@microsoft/teams.common/http';\n\nimport { Activity } from '../../activities';\nimport { Account, Resource } from '../../models';\n\nexport type ActivityParams = Pick<Activity, 'type'> & Partial<Activity>;\n\nexport class ConversationActivityClient {\n  readonly serviceUrl: string;\n\n  get http() {\n    return this._http;\n  }\n  set http(v) {\n    this._http = v;\n  }\n  protected _http: Client;\n\n  constructor(serviceUrl: string, options?: Client | ClientOptions) {\n    this.serviceUrl = serviceUrl;\n\n    if (!options) {\n      this._http = new Client();\n    } else if ('request' in options) {\n      this._http = options;\n    } else {\n      this._http = new Client(options);\n    }\n  }\n\n  async create(conversationId: string, params: ActivityParams) {\n    const res = await this.http.post<Resource>(\n      `${this.serviceUrl}/v3/conversations/${conversationId}/activities`,\n      params\n    );\n    return res.data;\n  }\n\n  async update(conversationId: string, id: string, params: ActivityParams) {\n    const res = await this.http.put<Resource>(\n      `${this.serviceUrl}/v3/conversations/${conversationId}/activities/${id}`,\n      params\n    );\n    return res.data;\n  }\n\n  async reply(conversationId: string, id: string, params: ActivityParams) {\n    params.replyToId = id;\n    const res = await this.http.post<Resource>(\n      `${this.serviceUrl}/v3/conversations/${conversationId}/activities/${id}`,\n      params\n    );\n    return res.data;\n  }\n\n  async delete(conversationId: string, id: string) {\n    const res = await this.http.delete<void>(\n      `${this.serviceUrl}/v3/conversations/${conversationId}/activities/${id}`\n    );\n    return res.data;\n  }\n\n  async getMembers(conversationId: string, id: string) {\n    const res = await this.http.get<Account[]>(\n      `${this.serviceUrl}/v3/conversations/${conversationId}/activities/${id}/members`\n    );\n    return res.data;\n  }\n}\n"]}