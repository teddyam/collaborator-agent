import { Client, ClientOptions } from '@microsoft/teams.common/http';
import { Conversation } from '../../models/conversation/conversation.mjs';
import { Account } from '../../models/account.mjs';
import { ConversationResource } from '../../models/conversation/conversation-resource.mjs';
import { Resource } from '../../models/resource.mjs';
import { A as ActivityParams, C as ConversationActivityClient } from '../../activity-PjVFY4cx.mjs';
import { ConversationMemberClient } from './member.mjs';
import '../../models/role.mjs';
import '../../message-BM7D0_tg.mjs';
import '../../models/entity/mention-entity.mjs';
import '../../models/input-hint.mjs';
import '../../models/text-format.mjs';
import '../../models/attachment/attachment.mjs';
import '../../models/attachment/card-attachment.mjs';
import '@microsoft/teams.cards';
import '../../models/card/animation-card.mjs';
import '../../models/card/card-action.mjs';
import '../../models/card/media-url.mjs';
import '../../models/card/thumbnail-url.mjs';
import '../../models/card/audio-card.mjs';
import '../../models/card/hero-card.mjs';
import '../../models/card/card-image.mjs';
import '../../models/card/thumbnail-card.mjs';
import '../../models/card/video-card.mjs';
import '../../models/oauth/oauth-card.mjs';
import '../../models/token/token-post-resource.mjs';
import '../../models/token-exchange/token-exchange-resource.mjs';
import '../../models/sign-in/sign-in-card.mjs';
import '../../models/attachment/attachment-layout.mjs';
import '../../models/suggested-actions.mjs';
import '../../models/importance.mjs';
import '../../models/delivery-mode.mjs';
import '../../activities/activity.mjs';
import '../../models/channel-id.mjs';
import '../../models/conversation/conversation-reference.mjs';
import '../../models/entity/index.mjs';
import '../../models/entity/ai-message-entity.mjs';
import '../../models/entity/message-entity.mjs';
import '../../models/entity/citation-entity.mjs';
import '../../models/entity/client-info-entity.mjs';
import '../../models/entity/sensitive-usage-entity.mjs';
import '../../models/entity/stream-info-entity.mjs';
import '../../models/channel-data/index.mjs';
import '../../models/meeting/meeting-info.mjs';
import '../../models/meeting/meeting-details.mjs';
import '../../models/channel-data/channel-info.mjs';
import '../../models/channel-data/notification-info.mjs';
import '../../models/channel-data/settings.mjs';
import '../../models/channel-data/team-info.mjs';
import '../../models/channel-data/tenant-info.mjs';
import '../../activities/typing.mjs';
import '../../activities/message/message-update.mjs';
import '../../activities/command/index.mjs';
import '../../activities/command/command-result.mjs';
import '../../activities/command/command-send.mjs';
import '../../activities/conversation/index.mjs';
import '../../activities/conversation/conversation-update.mjs';
import '../../activities/conversation/end-of-conversation.mjs';
import '../../activities/event/index.mjs';
import '../../activities/event/meeting-end.mjs';
import '../../activities/event/meeting-participant-join.mjs';
import '../../activities/event/meeting-participant-leave.mjs';
import '../../activities/event/meeting-start.mjs';
import '../../activities/event/read-receipt.mjs';
import '../../activities/handoff.mjs';
import '../../activities/install-update/index.mjs';
import '../../activities/install-update/add.mjs';
import '../../activities/install-update/remove.mjs';
import '../../activities/invoke/adaptive-card/index.mjs';
import '../../activities/invoke/adaptive-card/action.mjs';
import '../../models/adaptive-card/adaptive-card-invoke-value.mjs';
import '../../models/adaptive-card/adaptive-card-authentication.mjs';
import '../../models/token-exchange/token-exchange-invoke-request.mjs';
import '../../models/adaptive-card/adaptive-card-invoke-action.mjs';
import '../../activities/invoke/config/index.mjs';
import '../../activities/invoke/config/config-fetch.mjs';
import '../../activities/invoke/config/config-submit.mjs';
import '../../activities/invoke/execute-action.mjs';
import '../../models/o365/o365-connector-card-action-query.mjs';
import '../../activities/invoke/file-consent.mjs';
import '../../models/file/file-consent-card.mjs';
import '../../models/action.mjs';
import '../../models/file/file-upload-info.mjs';
import '../../activities/invoke/handoff-action.mjs';
import '../../activities/invoke/message/index.mjs';
import '../../activities/invoke/message/submit-action.mjs';
import '../../activities/invoke/message-extension/anon-query-link.mjs';
import '../../models/app-based-link-query.mjs';
import '../../activities/invoke/message-extension/card-button-clicked.mjs';
import '../../models/message/message.mjs';
import '../../models/message/message-body.mjs';
import '../../models/message/message-from.mjs';
import '../../models/message/message-app.mjs';
import '../../models/message/message-conversation.mjs';
import '../../models/message/message-user.mjs';
import '../../models/message/message-mention.mjs';
import '../../models/message/message-reaction.mjs';
import '../../models/task-module/task-module-request.mjs';
import '../../models/tab/tab-entity-context.mjs';
import '../../activities/invoke/message-extension/query.mjs';
import '../../models/messaging-extension/messaging-extension-query.mjs';
import '../../models/messaging-extension/messaging-extension-parameter.mjs';
import '../../activities/invoke/message-extension/query-link.mjs';
import '../../activities/invoke/message-extension/query-setting-url.mjs';
import '../../activities/invoke/message-extension/select-item.mjs';
import '../../activities/invoke/message-extension/setting.mjs';
import '../../activities/invoke/sign-in/index.mjs';
import '../../activities/invoke/sign-in/token-exchange.mjs';
import '../../models/sign-in/sign-in-exchange-token.mjs';
import '../../activities/invoke/sign-in/verify-state.mjs';
import '../../models/sign-in/sign-in-state-verify-query.mjs';
import '../../activities/invoke/tab/index.mjs';
import '../../activities/invoke/tab/tab-fetch.mjs';
import '../../models/tab/tab-request.mjs';
import '../../models/tab/tab-context.mjs';
import '../../activities/invoke/tab/tab-submit.mjs';
import '../../activities/invoke/task/index.mjs';
import '../../activities/invoke/task/task-fetch.mjs';
import '../../activities/invoke/task/task-submit.mjs';
import '../../activities/message/index.mjs';
import '../../activities/message/message-delete.mjs';
import '../../activities/message/message-reaction.mjs';
import '../../activities/trace.mjs';

type GetConversationsParams = {
    readonly continuationToken?: string;
};
type CreateConversationParams = {
    readonly isGroup?: boolean;
    readonly bot?: Partial<Account>;
    readonly members?: Account[];
    readonly topicName?: string;
    readonly tenantId?: string;
    readonly activity?: ActivityParams;
    readonly channelData?: Record<string, any>;
};
type GetConversationsResponse = {
    /**
     * Paging token
     */
    continuationToken: string;
    /**
     * List of conversations
     */
    conversations: Conversation[];
};
declare class ConversationClient {
    readonly serviceUrl: string;
    get http(): Client;
    set http(v: Client);
    protected _http: Client;
    protected _activities: ConversationActivityClient;
    protected _members: ConversationMemberClient;
    constructor(serviceUrl: string, options?: Client | ClientOptions);
    activities(conversationId: string): {
        create: (params: ActivityParams) => Promise<Resource>;
        update: (id: string, params: ActivityParams) => Promise<Resource>;
        reply: (id: string, params: ActivityParams) => Promise<Resource>;
        delete: (id: string) => Promise<void>;
        members: (activityId: string) => Promise<Account[]>;
    };
    members(conversationId: string): {
        get: () => Promise<Account[]>;
        getById: (id: string) => Promise<Account>;
        delete: (id: string) => Promise<void>;
    };
    get(params: GetConversationsParams): Promise<GetConversationsResponse>;
    create(params: CreateConversationParams): Promise<ConversationResource>;
}

export { ActivityParams, ConversationActivityClient, ConversationClient, ConversationMemberClient, type CreateConversationParams, type GetConversationsParams, type GetConversationsResponse };
