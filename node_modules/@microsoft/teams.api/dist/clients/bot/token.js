'use strict';

var qs = require('qs');
var http = require('@microsoft/teams.common/http');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var qs__default = /*#__PURE__*/_interopDefault(qs);

class BotTokenClient {
  get http() {
    return this._http;
  }
  set http(v) {
    this._http = v;
  }
  _http;
  constructor(options) {
    if (!options) {
      this._http = new http.Client();
    } else if ("request" in options) {
      this._http = options;
    } else {
      this._http = new http.Client(options);
    }
  }
  async get(credentials) {
    if ("token" in credentials) {
      return {
        token_type: "Bearer",
        expires_in: -1,
        access_token: await credentials.token(
          "https://api.botframework.com/.default",
          credentials.tenantId
        )
      };
    }
    const tenantId = credentials.tenantId || "botframework.com";
    const res = await this.http.post(
      `https://login.microsoftonline.com/${tenantId}/oauth2/v2.0/token`,
      qs__default.default.stringify({
        grant_type: "client_credentials",
        client_id: credentials.clientId,
        client_secret: credentials.clientSecret,
        scope: "https://api.botframework.com/.default"
      }),
      {
        headers: { "Content-Type": "application/x-www-form-urlencoded" }
      }
    );
    return res.data;
  }
  async getGraph(credentials) {
    if ("token" in credentials) {
      return {
        token_type: "Bearer",
        expires_in: -1,
        access_token: await credentials.token(
          "https://graph.microsoft.com/.default",
          credentials.tenantId
        )
      };
    }
    const tenantId = credentials.tenantId || "botframework.com";
    const res = await this.http.post(
      `https://login.microsoftonline.com/${tenantId}/oauth2/v2.0/token`,
      qs__default.default.stringify({
        grant_type: "client_credentials",
        client_id: credentials.clientId,
        client_secret: credentials.clientSecret,
        scope: "https://graph.microsoft.com/.default"
      }),
      {
        headers: { "Content-Type": "application/x-www-form-urlencoded" }
      }
    );
    return res.data;
  }
}

exports.BotTokenClient = BotTokenClient;
//# sourceMappingURL=token.js.map
//# sourceMappingURL=token.js.map