{"version":3,"sources":["../../src/clients/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAQO,MAAM,MAAO,CAAA;AAAA,EACT,UAAA;AAAA,EACA,IAAA;AAAA,EACA,KAAA;AAAA,EACA,aAAA;AAAA,EACA,KAAA;AAAA,EACA,QAAA;AAAA,EAET,IAAI,IAAO,GAAA;AACT,IAAA,OAAO,IAAK,CAAA,KAAA;AAAA;AACd,EACA,IAAI,KAAK,CAAG,EAAA;AACV,IAAA,IAAA,CAAK,KAAK,IAAO,GAAA,CAAA;AACjB,IAAA,IAAA,CAAK,cAAc,IAAO,GAAA,CAAA;AAC1B,IAAA,IAAA,CAAK,MAAM,IAAO,GAAA,CAAA;AAClB,IAAA,IAAA,CAAK,MAAM,IAAO,GAAA,CAAA;AAClB,IAAA,IAAA,CAAK,SAAS,IAAO,GAAA,CAAA;AACrB,IAAA,IAAA,CAAK,KAAQ,GAAA,CAAA;AAAA;AACf,EACU,KAAA;AAAA,EAEV,WAAA,CAAY,YAAoB,OAA4C,EAAA;AAC1E,IAAA,IAAA,CAAK,UAAa,GAAA,UAAA;AAElB,IAAA,IAAI,CAAC,OAAS,EAAA;AACZ,MAAK,IAAA,CAAA,KAAA,GAAQ,IAAI,IAAA,CAAK,MAAO,EAAA;AAAA,KAC/B,MAAA,IAAW,aAAa,OAAS,EAAA;AAC/B,MAAA,IAAA,CAAK,KAAQ,GAAA,OAAA;AAAA,KACR,MAAA;AACL,MAAK,IAAA,CAAA,KAAA,GAAQ,IAAI,IAAA,CAAK,MAAO,CAAA;AAAA,QAC3B,GAAG,OAAA;AAAA,QACH,OAAS,EAAA;AAAA,UACP,GAAG,OAAS,EAAA,OAAA;AAAA,UACZ,cAAgB,EAAA;AAAA;AAClB,OACD,CAAA;AAAA;AAGH,IAAA,IAAA,CAAK,IAAO,GAAA,IAAI,SAAU,CAAA,IAAA,CAAK,IAAI,CAAA;AACnC,IAAA,IAAA,CAAK,KAAQ,GAAA,IAAI,UAAW,CAAA,IAAA,CAAK,IAAI,CAAA;AACrC,IAAA,IAAA,CAAK,aAAgB,GAAA,IAAI,kBAAmB,CAAA,UAAA,EAAY,KAAK,IAAI,CAAA;AACjE,IAAA,IAAA,CAAK,KAAQ,GAAA,IAAI,UAAW,CAAA,UAAA,EAAY,KAAK,IAAI,CAAA;AACjD,IAAA,IAAA,CAAK,QAAW,GAAA,IAAI,aAAc,CAAA,UAAA,EAAY,KAAK,IAAI,CAAA;AAAA;AAE3D","file":"index.mjs","sourcesContent":["import * as http from '@microsoft/teams.common/http';\n\nimport { BotClient } from './bot';\nimport { ConversationClient } from './conversation';\nimport { MeetingClient } from './meeting';\nimport { TeamClient } from './team';\nimport { UserClient } from './user';\n\nexport class Client {\n  readonly serviceUrl: string;\n  readonly bots: BotClient;\n  readonly users: UserClient;\n  readonly conversations: ConversationClient;\n  readonly teams: TeamClient;\n  readonly meetings: MeetingClient;\n\n  get http() {\n    return this._http;\n  }\n  set http(v) {\n    this.bots.http = v;\n    this.conversations.http = v;\n    this.users.http = v;\n    this.teams.http = v;\n    this.meetings.http = v;\n    this._http = v;\n  }\n  protected _http: http.Client;\n\n  constructor(serviceUrl: string, options?: http.Client | http.ClientOptions) {\n    this.serviceUrl = serviceUrl;\n\n    if (!options) {\n      this._http = new http.Client();\n    } else if ('request' in options) {\n      this._http = options;\n    } else {\n      this._http = new http.Client({\n        ...options,\n        headers: {\n          ...options?.headers,\n          'Content-Type': 'application/json',\n        },\n      });\n    }\n\n    this.bots = new BotClient(this.http);\n    this.users = new UserClient(this.http);\n    this.conversations = new ConversationClient(serviceUrl, this.http);\n    this.teams = new TeamClient(serviceUrl, this.http);\n    this.meetings = new MeetingClient(serviceUrl, this.http);\n  }\n}\n\nexport * from './user';\nexport * from './bot';\nexport * from './conversation';\nexport * from './meeting';\nexport * from './team';\n"]}