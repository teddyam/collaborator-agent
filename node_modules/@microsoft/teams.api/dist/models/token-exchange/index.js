'use strict';

var tokenExchangeInvokeRequest = require('./token-exchange-invoke-request');
var tokenExchangeInvokeResponse = require('./token-exchange-invoke-response');
var tokenExchangeRequest = require('./token-exchange-request');
var tokenExchangeResource = require('./token-exchange-resource');
var tokenExchangeState = require('./token-exchange-state');



Object.keys(tokenExchangeInvokeRequest).forEach(function (k) {
	if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return tokenExchangeInvokeRequest[k]; }
	});
});
Object.keys(tokenExchangeInvokeResponse).forEach(function (k) {
	if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return tokenExchangeInvokeResponse[k]; }
	});
});
Object.keys(tokenExchangeRequest).forEach(function (k) {
	if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return tokenExchangeRequest[k]; }
	});
});
Object.keys(tokenExchangeResource).forEach(function (k) {
	if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return tokenExchangeResource[k]; }
	});
});
Object.keys(tokenExchangeState).forEach(function (k) {
	if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () { return tokenExchangeState[k]; }
	});
});
//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map