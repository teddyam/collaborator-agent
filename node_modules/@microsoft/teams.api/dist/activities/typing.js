'use strict';

var activity = require('./activity');

class TypingActivity extends activity.Activity {
  /**
   * The text content of the message.
   */
  text;
  constructor(value = {}) {
    super({
      type: "typing",
      ...value
    });
    Object.assign(this, value);
  }
  /**
   * initialize from interface
   */
  static from(activity) {
    return new TypingActivity(activity);
  }
  /**
   * convert to interface
   */
  toInterface() {
    return Object.assign({}, this);
  }
  /**
   * copy to a new instance
   */
  clone(options = {}) {
    return new TypingActivity({
      ...this.toInterface(),
      ...options
    });
  }
  /**
   * The text content of the message.
   */
  withText(value) {
    this.text = value;
    return this;
  }
  /**
   * Append text
   */
  addText(text) {
    if (!this.text) {
      this.text = "";
    }
    this.text += text;
    return this;
  }
  /**
   * Add stream informative update
   * @param id the stream id
   * @param sequence the sequence number (index) of the chunk
   */
  addStreamUpdate(sequence = 0) {
    if (!this.channelData) {
      this.channelData = {};
    }
    this.channelData.streamId = this.id;
    this.channelData.streamType = "streaming";
    this.channelData.streamSequence = sequence;
    return this.addEntity({
      type: "streaminfo",
      streamId: this.id,
      streamType: "streaming",
      streamSequence: sequence
    });
  }
}

exports.TypingActivity = TypingActivity;
//# sourceMappingURL=typing.js.map
//# sourceMappingURL=typing.js.map