import { IActivity, Activity } from '../activity.js';
import { ChannelData } from '../../models/channel-data/index.js';
import '../../models/channel-id.js';
import '../../models/account.js';
import '../../models/role.js';
import '../../models/conversation/conversation-reference.js';
import '../../models/entity/index.js';
import '../../models/entity/ai-message-entity.js';
import '../../models/entity/message-entity.js';
import '../../models/entity/citation-entity.js';
import '../../models/entity/client-info-entity.js';
import '../../models/entity/mention-entity.js';
import '../../models/entity/sensitive-usage-entity.js';
import '../../models/entity/stream-info-entity.js';
import '../../models/meeting/meeting-info.js';
import '../../models/meeting/meeting-details.js';
import '../../models/channel-data/channel-info.js';
import '../../models/channel-data/team-info.js';
import '../../models/channel-data/notification-info.js';
import '../../models/channel-data/tenant-info.js';
import '../../models/channel-data/settings.js';

interface IMessageDeleteActivity extends IActivity<'messageDelete'> {
    channelData: ChannelData & {
        eventType: 'softDeleteMessage';
    };
}
declare class MessageDeleteActivity extends Activity<'messageDelete'> implements IMessageDeleteActivity {
    channelData: ChannelData & {
        eventType: 'softDeleteMessage';
    };
    constructor(value?: Omit<Partial<IMessageDeleteActivity>, 'type'>);
    /**
     * initialize from interface
     */
    static from(activity: IMessageDeleteActivity): MessageDeleteActivity;
    /**
     * convert to interface
     */
    toInterface(): IMessageDeleteActivity;
    /**
     * copy to a new instance
     */
    clone(options?: Omit<Partial<IMessageDeleteActivity>, 'type'>): MessageDeleteActivity;
}

export { type IMessageDeleteActivity, MessageDeleteActivity };
