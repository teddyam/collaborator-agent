import http from 'http';
import express from 'express';
import { WebSocket, WebSocketServer } from 'ws';
import { ActivityParams, ConversationReference, IToken } from '@microsoft/teams.api';
import { HttpPlugin, IPluginActivityEvent, IPluginActivityResponseEvent, IPluginActivitySentEvent, IPluginStartEvent, ISender, IStreamer, IErrorEvent, IActivityEvent } from '@microsoft/teams.apps';
import { ILogger } from '@microsoft/teams.common';
import { ActivityEvent, IEvent } from './event';
import { Page } from './types';
type ResolveRejctPromise<T = any> = {
    readonly resolve: (value: T) => void;
    readonly reject: (err: any) => void;
};
export declare class DevtoolsPlugin implements ISender {
    readonly log: ILogger;
    readonly id?: IToken;
    readonly name?: IToken;
    readonly httpPlugin: HttpPlugin;
    readonly $onError: (event: IErrorEvent) => void;
    readonly $onActivity: (event: IActivityEvent) => void;
    protected http: http.Server;
    protected express: express.Application;
    protected ws: WebSocketServer;
    protected sockets: Map<string, WebSocket>;
    protected pending: Record<string, ResolveRejctPromise>;
    protected pages: Array<Page>;
    constructor();
    /**
     * add a custom page to the devtools
     * @param page the page to add
     */
    addPage(page: Page): this;
    onInit(): void;
    onStart({ port }: IPluginStartEvent): Promise<void>;
    onActivity({ activity, conversation }: IPluginActivityEvent): void;
    onActivitySent({ activity, conversation }: IPluginActivitySentEvent): void;
    onActivityResponse({ activity, response }: IPluginActivityResponseEvent): void;
    send(activity: ActivityParams, ref: ConversationReference): Promise<{
        id: string;
        type: "message";
        text?: string | undefined;
        speak?: string | undefined;
        inputHint?: import("@microsoft/teams.api").InputHint | undefined;
        summary?: string | undefined;
        textFormat?: import("@microsoft/teams.api").TextFormat | undefined;
        attachmentLayout?: import("@microsoft/teams.api").AttachmentLayout | undefined;
        attachments?: import("@microsoft/teams.api").Attachment[] | undefined;
        suggestedActions?: import("@microsoft/teams.api").SuggestedActions | undefined;
        importance?: import("@microsoft/teams.api").Importance | undefined;
        deliveryMode?: import("@microsoft/teams.api").DeliveryMode | undefined;
        expiration?: Date | undefined;
        value?: any;
        stripMentionsText?: ((options?: import("@microsoft/teams.api").StripMentionsTextOptions) => import("@microsoft/teams.api").IMessageActivity) | undefined;
        isRecipientMentioned?: (() => boolean) | undefined;
        getAccountMention?: ((accountId: string) => import("@microsoft/teams.api").MentionEntity | undefined) | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "messageUpdate";
        text?: string | undefined;
        speak?: string | undefined;
        summary?: string | undefined;
        expiration?: Date | undefined;
        value?: any;
        channelData?: (import("@microsoft/teams.api").ChannelData & {
            eventType: "undeleteMessage" | "editMessage";
        }) | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "messageDelete";
        channelData?: (import("@microsoft/teams.api").ChannelData & {
            eventType: "softDeleteMessage";
        }) | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "messageReaction";
        reactionsAdded?: import("@microsoft/teams.api").MessageReaction[] | undefined;
        reactionsRemoved?: import("@microsoft/teams.api").MessageReaction[] | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "event";
        name?: "application/vnd.microsoft.readReceipt" | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "event";
        name?: "application/vnd.microsoft.meetingStart" | undefined;
        value?: {
            id: string;
            meetingType: string;
            joinUrl: string;
            title: string;
            startTime: Date;
        } | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "event";
        name?: "application/vnd.microsoft.meetingEnd" | undefined;
        value?: {
            id: string;
            meetingType: string;
            joinUrl: string;
            title: string;
            endTime: Date;
        } | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "event";
        name?: "application/vnd.microsoft.meetingParticipantJoin" | undefined;
        value?: {
            members: {
                user: import("@microsoft/teams.api").Account;
                meeting: {
                    inMeeting: boolean;
                    role: string;
                };
            }[];
        } | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "event";
        name?: "application/vnd.microsoft.meetingParticipantLeave" | undefined;
        value?: {
            members: {
                user: import("@microsoft/teams.api").Account;
                meeting: {
                    inMeeting: boolean;
                    role: string;
                };
            }[];
        } | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "fileConsent/invoke" | undefined;
        value?: import("@microsoft/teams.api").FileConsentCardResponse | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "actionableMessage/executeAction" | undefined;
        value?: import("@microsoft/teams.api").O365ConnectorCardActionQuery | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "composeExtension/anonymousQueryLink" | undefined;
        value?: import("@microsoft/teams.api").AppBasedLinkQuery | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "composeExtension/fetchTask" | undefined;
        value?: import("@microsoft/teams.api").MessagingExtensionAction | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "composeExtension/onCardButtonClicked" | undefined;
        value?: any;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "composeExtension/queryLink" | undefined;
        value?: import("@microsoft/teams.api").AppBasedLinkQuery | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "composeExtension/querySettingUrl" | undefined;
        value?: import("@microsoft/teams.api").MessagingExtensionQuery | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "composeExtension/query" | undefined;
        value?: import("@microsoft/teams.api").MessagingExtensionQuery | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "composeExtension/selectItem" | undefined;
        value?: any;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "composeExtension/setting" | undefined;
        value?: import("@microsoft/teams.api").MessagingExtensionQuery | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "composeExtension/submitAction" | undefined;
        value?: import("@microsoft/teams.api").MessagingExtensionAction | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "config/fetch" | undefined;
        value?: any;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "config/submit" | undefined;
        value?: any;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "tab/fetch" | undefined;
        value?: import("@microsoft/teams.api").TabRequest | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "tab/submit" | undefined;
        value?: import("@microsoft/teams.api").TabRequest | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "task/fetch" | undefined;
        value?: import("@microsoft/teams.api").TaskModuleRequest | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "task/submit" | undefined;
        value?: import("@microsoft/teams.api").TaskModuleRequest | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "message/submitAction" | undefined;
        value?: {
            actionName: "feedback";
            actionValue: {
                reaction: "like" | "dislike";
                feedback: string;
            };
        } | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "handoff/action" | undefined;
        value?: {
            continuation: string;
        } | undefined;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "signin/tokenExchange" | undefined;
        value?: import("@microsoft/teams.api").SignInExchangeToken | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "signin/verifyState" | undefined;
        value?: import("@microsoft/teams.api").SigninStateVerifyQuery | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "invoke";
        name?: "adaptiveCard/action" | undefined;
        value?: import("@microsoft/teams.api").AdaptiveCardInvokeValue | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "trace";
        name?: string | undefined;
        label?: string | undefined;
        valueType?: string | undefined;
        value?: any;
        relatesTo?: ConversationReference | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "typing";
        text?: string | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "handoff";
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "conversationUpdate";
        membersAdded?: import("@microsoft/teams.api").Account[] | undefined;
        membersRemoved?: import("@microsoft/teams.api").Account[] | undefined;
        topicName?: string | undefined;
        historyDisclosed?: boolean | undefined;
        channelData?: (import("@microsoft/teams.api").ChannelData & {
            eventType: "channelCreated" | "channelDeleted" | "channelRenamed" | "channelRestored" | "teamArchived" | "teamDeleted" | "teamHardDeleted" | "teamRenamed" | "teamRestored" | "teamUnarchived";
        }) | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "endOfConversation";
        code?: import("@microsoft/teams.api").EndOfConversationCode | undefined;
        text?: string | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "command";
        name?: string | undefined;
        value?: import("@microsoft/teams.api").CommandValue<any> | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "commandResult";
        name?: string | undefined;
        value?: import("@microsoft/teams.api").CommandResultValue<any> | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "installationUpdate";
        action?: "add" | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    } | {
        id: string;
        type: "installationUpdate";
        action?: "remove" | undefined;
        serviceUrl?: string | undefined;
        timestamp?: Date | undefined;
        locale?: string | undefined;
        localTimestamp?: Date | undefined;
        channelId?: import("@microsoft/teams.api").ChannelID | undefined;
        from?: import("@microsoft/teams.api").Account | undefined;
        conversation?: import("@microsoft/teams.api").ConversationAccount | undefined;
        relatesTo?: ConversationReference | undefined;
        recipient?: import("@microsoft/teams.api").Account | undefined;
        replyToId?: string | undefined;
        entities?: import("@microsoft/teams.api").Entity[] | undefined;
        channelData?: import("@microsoft/teams.api").ChannelData | undefined;
        channel?: import("@microsoft/teams.api").ChannelInfo | undefined;
        team?: import("@microsoft/teams.api").TeamInfo | undefined;
        meeting?: import("@microsoft/teams.api").MeetingInfo | undefined;
        notification?: import("@microsoft/teams.api").NotificationInfo | undefined;
        isStreaming?: (() => boolean) | undefined;
    }>;
    createStream(ref: ConversationReference): IStreamer;
    protected onSocketConnection(socket: WebSocket): void;
    protected emitToSockets(event: IEvent): void;
    protected emitActivityToSockets(event: ActivityEvent): void;
}
export {};
