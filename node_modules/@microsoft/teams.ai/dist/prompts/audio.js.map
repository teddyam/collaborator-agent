{"version":3,"sources":["../../src/prompts/audio.ts"],"names":[],"mappings":";;AAiDO,MAAM,WAAoC,CAAA;AAAA,EAC/C,IAAI,IAAO,GAAA;AACT,IAAA,OAAO,IAAK,CAAA,KAAA;AAAA;AACd,EACmB,KAAA;AAAA,EAEnB,IAAI,WAAc,GAAA;AAChB,IAAA,OAAO,IAAK,CAAA,YAAA;AAAA;AACd,EACmB,YAAA;AAAA,EAEA,MAAA;AAAA,EAEnB,YAAY,OAA6B,EAAA;AACvC,IAAK,IAAA,CAAA,KAAA,GAAQ,QAAQ,IAAQ,IAAA,OAAA;AAC7B,IAAK,IAAA,CAAA,YAAA,GAAe,QAAQ,WAAe,IAAA,0CAAA;AAC3C,IAAA,IAAA,CAAK,SAAS,OAAQ,CAAA,KAAA;AAAA;AACxB,EAEA,YAAY,MAA2B,EAAA;AACrC,IAAI,IAAA,CAAC,IAAK,CAAA,MAAA,CAAO,WAAa,EAAA;AAC5B,MAAM,MAAA,IAAI,MAAM,iCAAiC,CAAA;AAAA;AAGnD,IAAO,OAAA,IAAA,CAAK,MAAO,CAAA,WAAA,CAAY,MAAM,CAAA;AAAA;AACvC,EAEA,YAAY,MAA2B,EAAA;AACrC,IAAI,IAAA,CAAC,IAAK,CAAA,MAAA,CAAO,WAAa,EAAA;AAC5B,MAAM,MAAA,IAAI,MAAM,gCAAgC,CAAA;AAAA;AAGlD,IAAO,OAAA,IAAA,CAAK,MAAO,CAAA,WAAA,CAAY,MAAM,CAAA;AAAA;AAEzC","file":"audio.js","sourcesContent":["import { IAudioModel, AudioToTextParams, TextToAudioParams } from '../models';\n\nexport type AudioPromptOptions = {\n  /**\n   * the name of the prompt\n   */\n  readonly name?: string;\n\n  /**\n   * the description of the prompt\n   */\n  readonly description?: string;\n\n  /**\n   * the model to send requests to\n   */\n  readonly model: IAudioModel;\n};\n\n/**\n * a prompt that can interface with\n * an audio model\n */\nexport interface IAudioPrompt {\n  /**\n   * the prompt name\n   */\n  readonly name: string;\n\n  /**\n   * the prompt description\n   */\n  readonly description: string;\n\n  /**\n   * convert text to audio\n   */\n  textToAudio?(params: TextToAudioParams): Promise<Buffer>;\n\n  /**\n   * transcribe audio to text\n   */\n  audioToText?(params: AudioToTextParams): Promise<string>;\n}\n\n/**\n * a prompt that can interface with\n * an audio model\n */\nexport class AudioPrompt implements IAudioPrompt {\n  get name() {\n    return this._name;\n  }\n  protected readonly _name: string;\n\n  get description() {\n    return this._description;\n  }\n  protected readonly _description: string;\n\n  protected readonly _model: IAudioModel;\n\n  constructor(options: AudioPromptOptions) {\n    this._name = options.name || 'audio';\n    this._description = options.description || 'an agent that can convert text to speech';\n    this._model = options.model;\n  }\n\n  audioToText(params: AudioToTextParams) {\n    if (!this._model.audioToText) {\n      throw new Error('cannot transcribe audio to text');\n    }\n\n    return this._model.audioToText(params);\n  }\n\n  textToAudio(params: TextToAudioParams) {\n    if (!this._model.textToAudio) {\n      throw new Error('cannot translate text to audio');\n    }\n\n    return this._model.textToAudio(params);\n  }\n}\n"]}